## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-
def configure(conf):
    #conf.env['zlib'] = conf.check(mandatory=False, lib='zlib', uselib_store='ZLIB')
    conf.env.append_value("CXXFLAGS", ["-Wall", "-O3", "-fopenmp"])

def build(bld):
    module = bld.create_ns3_module('AMuSt', ['internet','config-store','stats','network'])
    module.use.append('DASH')
    #module.use.append('ZLIB')
    module.includes = '.'
    module.source = [
        'model/dash-fake-server.cc',
        'model/http-server.cc',
        'model/node-throughput-tracer.cc',
        'model/http-server-fake-clientsocket.cc',
        'model/http-server-fake-virtual-clientsocket.cc',
        'model/http-client.cc',
        'model/http-multimedia-consumer.cc',
        'model/dashplayer-tracer.cc',
        'helper/http-helper.cc',
	    'helper/dash-http-client-helper.cc',
        'helper/dash-server-helper.cc'
        ]
    headers = bld(features='ns3header')
    headers.module = 'AMuSt'
    headers.source = [
        'model/http-server.h',
        'model/dash-fake-server.h',
        'model/node-throughput-tracer.h',
        'model/http-server-fake-clientsocket.h',
        'model/http-server-fake-virtual-clientsocket.h',
        'model/http-client.h',
        'model/http-multimedia-consumer.h',
        'model/dashplayer-tracer.h',
        'helper/http-helper.h',
        'helper/dash-http-client-helper.h',
        'helper/dash-server-helper.h',
        ]

    if bld.env['ENABLE_EXAMPLES']:
        bld.recurse('examples')

    bld.ns3_python_bindings()
